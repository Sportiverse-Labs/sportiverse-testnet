syntax = "proto3";

package sportiverse.sportiverse;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "sportiverse/sportiverse/params.proto";
import "sportiverse/sportiverse/post.proto";
import "sportiverse/sportiverse/comment.proto";
import "sportiverse/sportiverse/subscription.proto";
import "sportiverse/sportiverse/like.proto";

option go_package = "sportiverse/x/sportiverse/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams       (MsgUpdateParams      ) returns (MsgUpdateParamsResponse      );
  rpc CreatePost         (MsgCreatePost        ) returns (MsgCreatePostResponse        );
  rpc UpdatePost         (MsgUpdatePost        ) returns (MsgUpdatePostResponse        );
  rpc DeletePost         (MsgDeletePost        ) returns (MsgDeletePostResponse        );
  rpc CreateComment      (MsgCreateComment     ) returns (MsgCreateCommentResponse     );
  rpc UpdateComment      (MsgUpdateComment     ) returns (MsgUpdateCommentResponse     );
  rpc DeleteComment      (MsgDeleteComment     ) returns (MsgDeleteCommentResponse     );
  rpc CreateSubscription (MsgCreateSubscription) returns (MsgCreateSubscriptionResponse);
  rpc DeleteSubscription (MsgDeleteSubscription) returns (MsgDeleteSubscriptionResponse);
  rpc CreateLike         (MsgCreateLike        ) returns (MsgCreateLikeResponse        );
  rpc DeleteLike         (MsgDeleteLike        ) returns (MsgDeleteLikeResponse        );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                                 "authority";
  option           (amino.name) = "sportiverse/x/sportiverse/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreatePost {
  option (cosmos.msg.v1.signer) = "creator";
  string creator   = 1;
  string title     = 2;
  string body      = 3;
  string timestamp = 4;
}

message MsgCreatePostResponse {
  uint64 id = 1;
}

message MsgUpdatePost {
  option (cosmos.msg.v1.signer) = "creator";
  string creator   = 1;
  uint64 id        = 2;
  string title     = 3;
  string body      = 4;
  string timestamp = 5;
}

message MsgUpdatePostResponse {}

message MsgDeletePost {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  uint64 id      = 2;
}

message MsgDeletePostResponse {}

message MsgCreateComment {
  option (cosmos.msg.v1.signer) = "creator";
  string creator   = 1;
  string postId    = 2;
  string body      = 3;
  string timestamp = 4;
}

message MsgCreateCommentResponse {
  uint64 id = 1;
}

message MsgUpdateComment {
  option (cosmos.msg.v1.signer) = "creator";
  string creator   = 1;
  uint64 id        = 2;
  string postId    = 3;
  string body      = 4;
  string timestamp = 5;
}

message MsgUpdateCommentResponse {}

message MsgDeleteComment {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  uint64 id      = 2;
}

message MsgDeleteCommentResponse {}

message MsgCreateSubscription {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string userId  = 2;
}

message MsgCreateSubscriptionResponse {
  uint64 id = 1;
}

message MsgDeleteSubscription {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  uint64 id      = 2;
}

message MsgDeleteSubscriptionResponse {}

message MsgCreateLike {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string postId  = 2;
}

message MsgCreateLikeResponse {
  uint64 id = 1;
}

message MsgDeleteLike {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  uint64 id      = 2;
}

message MsgDeleteLikeResponse {}

