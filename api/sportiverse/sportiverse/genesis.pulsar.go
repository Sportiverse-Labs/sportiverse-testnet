// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package sportiverse

import (
	_ "cosmossdk.io/api/amino"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_GenesisState_2_list)(nil)

type _GenesisState_2_list struct {
	list *[]*Post
}

func (x *_GenesisState_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Post)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Post)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_2_list) AppendMutable() protoreflect.Value {
	v := new(Post)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_2_list) NewElement() protoreflect.Value {
	v := new(Post)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_2_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_4_list)(nil)

type _GenesisState_4_list struct {
	list *[]*Comment
}

func (x *_GenesisState_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Comment)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Comment)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_4_list) AppendMutable() protoreflect.Value {
	v := new(Comment)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_4_list) NewElement() protoreflect.Value {
	v := new(Comment)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_4_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_6_list)(nil)

type _GenesisState_6_list struct {
	list *[]*Subscription
}

func (x *_GenesisState_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Subscription)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Subscription)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_6_list) AppendMutable() protoreflect.Value {
	v := new(Subscription)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_6_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_6_list) NewElement() protoreflect.Value {
	v := new(Subscription)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_6_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_8_list)(nil)

type _GenesisState_8_list struct {
	list *[]*Like
}

func (x *_GenesisState_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Like)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Like)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_8_list) AppendMutable() protoreflect.Value {
	v := new(Like)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_8_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_8_list) NewElement() protoreflect.Value {
	v := new(Like)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_8_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_10_list)(nil)

type _GenesisState_10_list struct {
	list *[]*Account
}

func (x *_GenesisState_10_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_10_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_10_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Account)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_10_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Account)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_10_list) AppendMutable() protoreflect.Value {
	v := new(Account)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_10_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_10_list) NewElement() protoreflect.Value {
	v := new(Account)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_10_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GenesisState                   protoreflect.MessageDescriptor
	fd_GenesisState_params            protoreflect.FieldDescriptor
	fd_GenesisState_postList          protoreflect.FieldDescriptor
	fd_GenesisState_postCount         protoreflect.FieldDescriptor
	fd_GenesisState_commentList       protoreflect.FieldDescriptor
	fd_GenesisState_commentCount      protoreflect.FieldDescriptor
	fd_GenesisState_subscriptionList  protoreflect.FieldDescriptor
	fd_GenesisState_subscriptionCount protoreflect.FieldDescriptor
	fd_GenesisState_likeList          protoreflect.FieldDescriptor
	fd_GenesisState_likeCount         protoreflect.FieldDescriptor
	fd_GenesisState_accountList       protoreflect.FieldDescriptor
	fd_GenesisState_accountCount      protoreflect.FieldDescriptor
)

func init() {
	file_sportiverse_sportiverse_genesis_proto_init()
	md_GenesisState = File_sportiverse_sportiverse_genesis_proto.Messages().ByName("GenesisState")
	fd_GenesisState_params = md_GenesisState.Fields().ByName("params")
	fd_GenesisState_postList = md_GenesisState.Fields().ByName("postList")
	fd_GenesisState_postCount = md_GenesisState.Fields().ByName("postCount")
	fd_GenesisState_commentList = md_GenesisState.Fields().ByName("commentList")
	fd_GenesisState_commentCount = md_GenesisState.Fields().ByName("commentCount")
	fd_GenesisState_subscriptionList = md_GenesisState.Fields().ByName("subscriptionList")
	fd_GenesisState_subscriptionCount = md_GenesisState.Fields().ByName("subscriptionCount")
	fd_GenesisState_likeList = md_GenesisState.Fields().ByName("likeList")
	fd_GenesisState_likeCount = md_GenesisState.Fields().ByName("likeCount")
	fd_GenesisState_accountList = md_GenesisState.Fields().ByName("accountList")
	fd_GenesisState_accountCount = md_GenesisState.Fields().ByName("accountCount")
}

var _ protoreflect.Message = (*fastReflection_GenesisState)(nil)

type fastReflection_GenesisState GenesisState

func (x *GenesisState) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GenesisState)(x)
}

func (x *GenesisState) slowProtoReflect() protoreflect.Message {
	mi := &file_sportiverse_sportiverse_genesis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GenesisState_messageType fastReflection_GenesisState_messageType
var _ protoreflect.MessageType = fastReflection_GenesisState_messageType{}

type fastReflection_GenesisState_messageType struct{}

func (x fastReflection_GenesisState_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GenesisState)(nil)
}
func (x fastReflection_GenesisState_messageType) New() protoreflect.Message {
	return new(fastReflection_GenesisState)
}
func (x fastReflection_GenesisState_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GenesisState
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GenesisState) Descriptor() protoreflect.MessageDescriptor {
	return md_GenesisState
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GenesisState) Type() protoreflect.MessageType {
	return _fastReflection_GenesisState_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GenesisState) New() protoreflect.Message {
	return new(fastReflection_GenesisState)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GenesisState) Interface() protoreflect.ProtoMessage {
	return (*GenesisState)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GenesisState) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Params != nil {
		value := protoreflect.ValueOfMessage(x.Params.ProtoReflect())
		if !f(fd_GenesisState_params, value) {
			return
		}
	}
	if len(x.PostList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_2_list{list: &x.PostList})
		if !f(fd_GenesisState_postList, value) {
			return
		}
	}
	if x.PostCount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PostCount)
		if !f(fd_GenesisState_postCount, value) {
			return
		}
	}
	if len(x.CommentList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_4_list{list: &x.CommentList})
		if !f(fd_GenesisState_commentList, value) {
			return
		}
	}
	if x.CommentCount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CommentCount)
		if !f(fd_GenesisState_commentCount, value) {
			return
		}
	}
	if len(x.SubscriptionList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_6_list{list: &x.SubscriptionList})
		if !f(fd_GenesisState_subscriptionList, value) {
			return
		}
	}
	if x.SubscriptionCount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.SubscriptionCount)
		if !f(fd_GenesisState_subscriptionCount, value) {
			return
		}
	}
	if len(x.LikeList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_8_list{list: &x.LikeList})
		if !f(fd_GenesisState_likeList, value) {
			return
		}
	}
	if x.LikeCount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.LikeCount)
		if !f(fd_GenesisState_likeCount, value) {
			return
		}
	}
	if len(x.AccountList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_10_list{list: &x.AccountList})
		if !f(fd_GenesisState_accountList, value) {
			return
		}
	}
	if x.AccountCount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.AccountCount)
		if !f(fd_GenesisState_accountCount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GenesisState) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "sportiverse.sportiverse.GenesisState.params":
		return x.Params != nil
	case "sportiverse.sportiverse.GenesisState.postList":
		return len(x.PostList) != 0
	case "sportiverse.sportiverse.GenesisState.postCount":
		return x.PostCount != uint64(0)
	case "sportiverse.sportiverse.GenesisState.commentList":
		return len(x.CommentList) != 0
	case "sportiverse.sportiverse.GenesisState.commentCount":
		return x.CommentCount != uint64(0)
	case "sportiverse.sportiverse.GenesisState.subscriptionList":
		return len(x.SubscriptionList) != 0
	case "sportiverse.sportiverse.GenesisState.subscriptionCount":
		return x.SubscriptionCount != uint64(0)
	case "sportiverse.sportiverse.GenesisState.likeList":
		return len(x.LikeList) != 0
	case "sportiverse.sportiverse.GenesisState.likeCount":
		return x.LikeCount != uint64(0)
	case "sportiverse.sportiverse.GenesisState.accountList":
		return len(x.AccountList) != 0
	case "sportiverse.sportiverse.GenesisState.accountCount":
		return x.AccountCount != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sportiverse.sportiverse.GenesisState"))
		}
		panic(fmt.Errorf("message sportiverse.sportiverse.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "sportiverse.sportiverse.GenesisState.params":
		x.Params = nil
	case "sportiverse.sportiverse.GenesisState.postList":
		x.PostList = nil
	case "sportiverse.sportiverse.GenesisState.postCount":
		x.PostCount = uint64(0)
	case "sportiverse.sportiverse.GenesisState.commentList":
		x.CommentList = nil
	case "sportiverse.sportiverse.GenesisState.commentCount":
		x.CommentCount = uint64(0)
	case "sportiverse.sportiverse.GenesisState.subscriptionList":
		x.SubscriptionList = nil
	case "sportiverse.sportiverse.GenesisState.subscriptionCount":
		x.SubscriptionCount = uint64(0)
	case "sportiverse.sportiverse.GenesisState.likeList":
		x.LikeList = nil
	case "sportiverse.sportiverse.GenesisState.likeCount":
		x.LikeCount = uint64(0)
	case "sportiverse.sportiverse.GenesisState.accountList":
		x.AccountList = nil
	case "sportiverse.sportiverse.GenesisState.accountCount":
		x.AccountCount = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sportiverse.sportiverse.GenesisState"))
		}
		panic(fmt.Errorf("message sportiverse.sportiverse.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GenesisState) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "sportiverse.sportiverse.GenesisState.params":
		value := x.Params
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "sportiverse.sportiverse.GenesisState.postList":
		if len(x.PostList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_2_list{})
		}
		listValue := &_GenesisState_2_list{list: &x.PostList}
		return protoreflect.ValueOfList(listValue)
	case "sportiverse.sportiverse.GenesisState.postCount":
		value := x.PostCount
		return protoreflect.ValueOfUint64(value)
	case "sportiverse.sportiverse.GenesisState.commentList":
		if len(x.CommentList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_4_list{})
		}
		listValue := &_GenesisState_4_list{list: &x.CommentList}
		return protoreflect.ValueOfList(listValue)
	case "sportiverse.sportiverse.GenesisState.commentCount":
		value := x.CommentCount
		return protoreflect.ValueOfUint64(value)
	case "sportiverse.sportiverse.GenesisState.subscriptionList":
		if len(x.SubscriptionList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_6_list{})
		}
		listValue := &_GenesisState_6_list{list: &x.SubscriptionList}
		return protoreflect.ValueOfList(listValue)
	case "sportiverse.sportiverse.GenesisState.subscriptionCount":
		value := x.SubscriptionCount
		return protoreflect.ValueOfUint64(value)
	case "sportiverse.sportiverse.GenesisState.likeList":
		if len(x.LikeList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_8_list{})
		}
		listValue := &_GenesisState_8_list{list: &x.LikeList}
		return protoreflect.ValueOfList(listValue)
	case "sportiverse.sportiverse.GenesisState.likeCount":
		value := x.LikeCount
		return protoreflect.ValueOfUint64(value)
	case "sportiverse.sportiverse.GenesisState.accountList":
		if len(x.AccountList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_10_list{})
		}
		listValue := &_GenesisState_10_list{list: &x.AccountList}
		return protoreflect.ValueOfList(listValue)
	case "sportiverse.sportiverse.GenesisState.accountCount":
		value := x.AccountCount
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sportiverse.sportiverse.GenesisState"))
		}
		panic(fmt.Errorf("message sportiverse.sportiverse.GenesisState does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "sportiverse.sportiverse.GenesisState.params":
		x.Params = value.Message().Interface().(*Params)
	case "sportiverse.sportiverse.GenesisState.postList":
		lv := value.List()
		clv := lv.(*_GenesisState_2_list)
		x.PostList = *clv.list
	case "sportiverse.sportiverse.GenesisState.postCount":
		x.PostCount = value.Uint()
	case "sportiverse.sportiverse.GenesisState.commentList":
		lv := value.List()
		clv := lv.(*_GenesisState_4_list)
		x.CommentList = *clv.list
	case "sportiverse.sportiverse.GenesisState.commentCount":
		x.CommentCount = value.Uint()
	case "sportiverse.sportiverse.GenesisState.subscriptionList":
		lv := value.List()
		clv := lv.(*_GenesisState_6_list)
		x.SubscriptionList = *clv.list
	case "sportiverse.sportiverse.GenesisState.subscriptionCount":
		x.SubscriptionCount = value.Uint()
	case "sportiverse.sportiverse.GenesisState.likeList":
		lv := value.List()
		clv := lv.(*_GenesisState_8_list)
		x.LikeList = *clv.list
	case "sportiverse.sportiverse.GenesisState.likeCount":
		x.LikeCount = value.Uint()
	case "sportiverse.sportiverse.GenesisState.accountList":
		lv := value.List()
		clv := lv.(*_GenesisState_10_list)
		x.AccountList = *clv.list
	case "sportiverse.sportiverse.GenesisState.accountCount":
		x.AccountCount = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sportiverse.sportiverse.GenesisState"))
		}
		panic(fmt.Errorf("message sportiverse.sportiverse.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sportiverse.sportiverse.GenesisState.params":
		if x.Params == nil {
			x.Params = new(Params)
		}
		return protoreflect.ValueOfMessage(x.Params.ProtoReflect())
	case "sportiverse.sportiverse.GenesisState.postList":
		if x.PostList == nil {
			x.PostList = []*Post{}
		}
		value := &_GenesisState_2_list{list: &x.PostList}
		return protoreflect.ValueOfList(value)
	case "sportiverse.sportiverse.GenesisState.commentList":
		if x.CommentList == nil {
			x.CommentList = []*Comment{}
		}
		value := &_GenesisState_4_list{list: &x.CommentList}
		return protoreflect.ValueOfList(value)
	case "sportiverse.sportiverse.GenesisState.subscriptionList":
		if x.SubscriptionList == nil {
			x.SubscriptionList = []*Subscription{}
		}
		value := &_GenesisState_6_list{list: &x.SubscriptionList}
		return protoreflect.ValueOfList(value)
	case "sportiverse.sportiverse.GenesisState.likeList":
		if x.LikeList == nil {
			x.LikeList = []*Like{}
		}
		value := &_GenesisState_8_list{list: &x.LikeList}
		return protoreflect.ValueOfList(value)
	case "sportiverse.sportiverse.GenesisState.accountList":
		if x.AccountList == nil {
			x.AccountList = []*Account{}
		}
		value := &_GenesisState_10_list{list: &x.AccountList}
		return protoreflect.ValueOfList(value)
	case "sportiverse.sportiverse.GenesisState.postCount":
		panic(fmt.Errorf("field postCount of message sportiverse.sportiverse.GenesisState is not mutable"))
	case "sportiverse.sportiverse.GenesisState.commentCount":
		panic(fmt.Errorf("field commentCount of message sportiverse.sportiverse.GenesisState is not mutable"))
	case "sportiverse.sportiverse.GenesisState.subscriptionCount":
		panic(fmt.Errorf("field subscriptionCount of message sportiverse.sportiverse.GenesisState is not mutable"))
	case "sportiverse.sportiverse.GenesisState.likeCount":
		panic(fmt.Errorf("field likeCount of message sportiverse.sportiverse.GenesisState is not mutable"))
	case "sportiverse.sportiverse.GenesisState.accountCount":
		panic(fmt.Errorf("field accountCount of message sportiverse.sportiverse.GenesisState is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sportiverse.sportiverse.GenesisState"))
		}
		panic(fmt.Errorf("message sportiverse.sportiverse.GenesisState does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GenesisState) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "sportiverse.sportiverse.GenesisState.params":
		m := new(Params)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "sportiverse.sportiverse.GenesisState.postList":
		list := []*Post{}
		return protoreflect.ValueOfList(&_GenesisState_2_list{list: &list})
	case "sportiverse.sportiverse.GenesisState.postCount":
		return protoreflect.ValueOfUint64(uint64(0))
	case "sportiverse.sportiverse.GenesisState.commentList":
		list := []*Comment{}
		return protoreflect.ValueOfList(&_GenesisState_4_list{list: &list})
	case "sportiverse.sportiverse.GenesisState.commentCount":
		return protoreflect.ValueOfUint64(uint64(0))
	case "sportiverse.sportiverse.GenesisState.subscriptionList":
		list := []*Subscription{}
		return protoreflect.ValueOfList(&_GenesisState_6_list{list: &list})
	case "sportiverse.sportiverse.GenesisState.subscriptionCount":
		return protoreflect.ValueOfUint64(uint64(0))
	case "sportiverse.sportiverse.GenesisState.likeList":
		list := []*Like{}
		return protoreflect.ValueOfList(&_GenesisState_8_list{list: &list})
	case "sportiverse.sportiverse.GenesisState.likeCount":
		return protoreflect.ValueOfUint64(uint64(0))
	case "sportiverse.sportiverse.GenesisState.accountList":
		list := []*Account{}
		return protoreflect.ValueOfList(&_GenesisState_10_list{list: &list})
	case "sportiverse.sportiverse.GenesisState.accountCount":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: sportiverse.sportiverse.GenesisState"))
		}
		panic(fmt.Errorf("message sportiverse.sportiverse.GenesisState does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GenesisState) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in sportiverse.sportiverse.GenesisState", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GenesisState) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GenesisState) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GenesisState) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Params != nil {
			l = options.Size(x.Params)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.PostList) > 0 {
			for _, e := range x.PostList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.PostCount != 0 {
			n += 1 + runtime.Sov(uint64(x.PostCount))
		}
		if len(x.CommentList) > 0 {
			for _, e := range x.CommentList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.CommentCount != 0 {
			n += 1 + runtime.Sov(uint64(x.CommentCount))
		}
		if len(x.SubscriptionList) > 0 {
			for _, e := range x.SubscriptionList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.SubscriptionCount != 0 {
			n += 1 + runtime.Sov(uint64(x.SubscriptionCount))
		}
		if len(x.LikeList) > 0 {
			for _, e := range x.LikeList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.LikeCount != 0 {
			n += 1 + runtime.Sov(uint64(x.LikeCount))
		}
		if len(x.AccountList) > 0 {
			for _, e := range x.AccountList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.AccountCount != 0 {
			n += 1 + runtime.Sov(uint64(x.AccountCount))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.AccountCount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.AccountCount))
			i--
			dAtA[i] = 0x58
		}
		if len(x.AccountList) > 0 {
			for iNdEx := len(x.AccountList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.AccountList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x52
			}
		}
		if x.LikeCount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.LikeCount))
			i--
			dAtA[i] = 0x48
		}
		if len(x.LikeList) > 0 {
			for iNdEx := len(x.LikeList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.LikeList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x42
			}
		}
		if x.SubscriptionCount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SubscriptionCount))
			i--
			dAtA[i] = 0x38
		}
		if len(x.SubscriptionList) > 0 {
			for iNdEx := len(x.SubscriptionList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.SubscriptionList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x32
			}
		}
		if x.CommentCount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CommentCount))
			i--
			dAtA[i] = 0x28
		}
		if len(x.CommentList) > 0 {
			for iNdEx := len(x.CommentList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CommentList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if x.PostCount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PostCount))
			i--
			dAtA[i] = 0x18
		}
		if len(x.PostList) > 0 {
			for iNdEx := len(x.PostList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.PostList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if x.Params != nil {
			encoded, err := options.Marshal(x.Params)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Params == nil {
					x.Params = &Params{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Params); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PostList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PostList = append(x.PostList, &Post{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PostList[len(x.PostList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PostCount", wireType)
				}
				x.PostCount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PostCount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CommentList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CommentList = append(x.CommentList, &Comment{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CommentList[len(x.CommentList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CommentCount", wireType)
				}
				x.CommentCount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CommentCount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SubscriptionList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SubscriptionList = append(x.SubscriptionList, &Subscription{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.SubscriptionList[len(x.SubscriptionList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SubscriptionCount", wireType)
				}
				x.SubscriptionCount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SubscriptionCount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LikeList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LikeList = append(x.LikeList, &Like{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LikeList[len(x.LikeList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LikeCount", wireType)
				}
				x.LikeCount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.LikeCount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AccountList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AccountList = append(x.AccountList, &Account{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AccountList[len(x.AccountList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 11:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AccountCount", wireType)
				}
				x.AccountCount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.AccountCount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: sportiverse/sportiverse/genesis.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GenesisState defines the sportiverse module's genesis state.
type GenesisState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// params defines all the parameters of the module.
	Params            *Params         `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	PostList          []*Post         `protobuf:"bytes,2,rep,name=postList,proto3" json:"postList,omitempty"`
	PostCount         uint64          `protobuf:"varint,3,opt,name=postCount,proto3" json:"postCount,omitempty"`
	CommentList       []*Comment      `protobuf:"bytes,4,rep,name=commentList,proto3" json:"commentList,omitempty"`
	CommentCount      uint64          `protobuf:"varint,5,opt,name=commentCount,proto3" json:"commentCount,omitempty"`
	SubscriptionList  []*Subscription `protobuf:"bytes,6,rep,name=subscriptionList,proto3" json:"subscriptionList,omitempty"`
	SubscriptionCount uint64          `protobuf:"varint,7,opt,name=subscriptionCount,proto3" json:"subscriptionCount,omitempty"`
	LikeList          []*Like         `protobuf:"bytes,8,rep,name=likeList,proto3" json:"likeList,omitempty"`
	LikeCount         uint64          `protobuf:"varint,9,opt,name=likeCount,proto3" json:"likeCount,omitempty"`
	AccountList       []*Account      `protobuf:"bytes,10,rep,name=accountList,proto3" json:"accountList,omitempty"`
	AccountCount      uint64          `protobuf:"varint,11,opt,name=accountCount,proto3" json:"accountCount,omitempty"`
}

func (x *GenesisState) Reset() {
	*x = GenesisState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sportiverse_sportiverse_genesis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisState) ProtoMessage() {}

// Deprecated: Use GenesisState.ProtoReflect.Descriptor instead.
func (*GenesisState) Descriptor() ([]byte, []int) {
	return file_sportiverse_sportiverse_genesis_proto_rawDescGZIP(), []int{0}
}

func (x *GenesisState) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *GenesisState) GetPostList() []*Post {
	if x != nil {
		return x.PostList
	}
	return nil
}

func (x *GenesisState) GetPostCount() uint64 {
	if x != nil {
		return x.PostCount
	}
	return 0
}

func (x *GenesisState) GetCommentList() []*Comment {
	if x != nil {
		return x.CommentList
	}
	return nil
}

func (x *GenesisState) GetCommentCount() uint64 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *GenesisState) GetSubscriptionList() []*Subscription {
	if x != nil {
		return x.SubscriptionList
	}
	return nil
}

func (x *GenesisState) GetSubscriptionCount() uint64 {
	if x != nil {
		return x.SubscriptionCount
	}
	return 0
}

func (x *GenesisState) GetLikeList() []*Like {
	if x != nil {
		return x.LikeList
	}
	return nil
}

func (x *GenesisState) GetLikeCount() uint64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *GenesisState) GetAccountList() []*Account {
	if x != nil {
		return x.AccountList
	}
	return nil
}

func (x *GenesisState) GetAccountCount() uint64 {
	if x != nil {
		return x.AccountCount
	}
	return 0
}

var File_sportiverse_sportiverse_genesis_proto protoreflect.FileDescriptor

var file_sportiverse_sportiverse_genesis_proto_rawDesc = []byte{
	0x0a, 0x25, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2f, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x2e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2f, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x22, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2f, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x2f, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2f, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x2f, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2f,
	0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2f, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xf3, 0x04, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x2e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x3f, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x04, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x57, 0x0a, 0x10, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x10, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x6c, 0x69,
	0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x42, 0x04, 0xc8, 0xde, 0x1f,
	0x00, 0x52, 0x08, 0x6c, 0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0xd1, 0x01, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x2e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x42, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x27, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x2f, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65,
	0xa2, 0x02, 0x03, 0x53, 0x53, 0x58, 0xaa, 0x02, 0x17, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x2e, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65,
	0xca, 0x02, 0x17, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5c, 0x53,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0xe2, 0x02, 0x23, 0x53, 0x70, 0x6f,
	0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5c, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x18, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x3a, 0x3a,
	0x53, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_sportiverse_sportiverse_genesis_proto_rawDescOnce sync.Once
	file_sportiverse_sportiverse_genesis_proto_rawDescData = file_sportiverse_sportiverse_genesis_proto_rawDesc
)

func file_sportiverse_sportiverse_genesis_proto_rawDescGZIP() []byte {
	file_sportiverse_sportiverse_genesis_proto_rawDescOnce.Do(func() {
		file_sportiverse_sportiverse_genesis_proto_rawDescData = protoimpl.X.CompressGZIP(file_sportiverse_sportiverse_genesis_proto_rawDescData)
	})
	return file_sportiverse_sportiverse_genesis_proto_rawDescData
}

var file_sportiverse_sportiverse_genesis_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_sportiverse_sportiverse_genesis_proto_goTypes = []interface{}{
	(*GenesisState)(nil), // 0: sportiverse.sportiverse.GenesisState
	(*Params)(nil),       // 1: sportiverse.sportiverse.Params
	(*Post)(nil),         // 2: sportiverse.sportiverse.Post
	(*Comment)(nil),      // 3: sportiverse.sportiverse.Comment
	(*Subscription)(nil), // 4: sportiverse.sportiverse.Subscription
	(*Like)(nil),         // 5: sportiverse.sportiverse.Like
	(*Account)(nil),      // 6: sportiverse.sportiverse.Account
}
var file_sportiverse_sportiverse_genesis_proto_depIdxs = []int32{
	1, // 0: sportiverse.sportiverse.GenesisState.params:type_name -> sportiverse.sportiverse.Params
	2, // 1: sportiverse.sportiverse.GenesisState.postList:type_name -> sportiverse.sportiverse.Post
	3, // 2: sportiverse.sportiverse.GenesisState.commentList:type_name -> sportiverse.sportiverse.Comment
	4, // 3: sportiverse.sportiverse.GenesisState.subscriptionList:type_name -> sportiverse.sportiverse.Subscription
	5, // 4: sportiverse.sportiverse.GenesisState.likeList:type_name -> sportiverse.sportiverse.Like
	6, // 5: sportiverse.sportiverse.GenesisState.accountList:type_name -> sportiverse.sportiverse.Account
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_sportiverse_sportiverse_genesis_proto_init() }
func file_sportiverse_sportiverse_genesis_proto_init() {
	if File_sportiverse_sportiverse_genesis_proto != nil {
		return
	}
	file_sportiverse_sportiverse_params_proto_init()
	file_sportiverse_sportiverse_post_proto_init()
	file_sportiverse_sportiverse_comment_proto_init()
	file_sportiverse_sportiverse_subscription_proto_init()
	file_sportiverse_sportiverse_like_proto_init()
	file_sportiverse_sportiverse_account_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sportiverse_sportiverse_genesis_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sportiverse_sportiverse_genesis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sportiverse_sportiverse_genesis_proto_goTypes,
		DependencyIndexes: file_sportiverse_sportiverse_genesis_proto_depIdxs,
		MessageInfos:      file_sportiverse_sportiverse_genesis_proto_msgTypes,
	}.Build()
	File_sportiverse_sportiverse_genesis_proto = out.File
	file_sportiverse_sportiverse_genesis_proto_rawDesc = nil
	file_sportiverse_sportiverse_genesis_proto_goTypes = nil
	file_sportiverse_sportiverse_genesis_proto_depIdxs = nil
}
